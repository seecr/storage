Changeset created on Thu Nov 10 14:25:07 UTC 2011 by Seecr (Seek You Too B.V.)

Description: Catch KeyError for non-string keys

    Small fix to allow errors on keys that are not strings. 
    E.g. Meresco uses tuples for keys.

Baseline version: svn+ssh://svn@svn.cq2.org/svn/storage/workingsets/5.1.10-Seecr/version_0

diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/storage/hierarchicalstorage.py version_1/storage/hierarchicalstorage.py
--- version_0/storage/hierarchicalstorage.py	2011-11-10 15:13:27.863679049 +0100
+++ version_1/storage/hierarchicalstorage.py	2011-11-10 15:25:07.611677417 +0100
@@ -1,26 +1,28 @@
 # -*- coding: utf-8 -*-
 ## begin license ##
-#
-#    Storage stores data in a reliable, extendable filebased storage
-#    with great performance.
-#    Copyright (C) 2006-2010 Seek You Too B.V. (CQ2) http://www.cq2.nl
-#
-#    This file is part of Storage.
-#
-#    Storage is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Storage is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Storage; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Storage" stores data in a reliable, extendable filebased storage
+# with great performance. 
+# 
+# Copyright (C) 2006-2010 Seek You Too B.V. (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Storage"
+# 
+# "Storage" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Storage" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Storage"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from storage import File
@@ -30,7 +32,7 @@
         try:
             return aMethod(self, name)
         except KeyError:
-            raise HierarchicalStorageError(message % str(name))
+            raise HierarchicalStorageError(message % repr(name))
     return wrapper
 
 def catchPutKeyError(message, aMethod):
@@ -38,11 +40,11 @@
         try:
             return aMethod(self, name)
         except KeyError, e:
-            raise HierarchicalStorageError("%s %s" % (message % name, str(e)))
+            raise HierarchicalStorageError("%s %s" % (message % repr(name), str(e)))
     return wrapper
 
-catchPutError = lambda aMethod: catchPutKeyError("Name '%s' not allowed:", aMethod)
-catchDoesNotExistError = lambda aMethod: catchKeyError("Name '%s' does not exist.", aMethod)
+catchPutError = lambda aMethod: catchPutKeyError("Name %s not allowed:", aMethod)
+catchDoesNotExistError = lambda aMethod: catchKeyError("Name %s does not exist.", aMethod)
 
 class HierarchicalStorage(object):
     def __init__(self, storage, split = lambda x:(x,), join=''.join):
diff --unidirectional-new-file --recursive --unified '--exclude=*.so' '--exclude=*.o' '--exclude=.svn' '--exclude=*.pyc' '--exclude=deps.d' '--exclude=applied' version_0/test/hierarchicalstoragetest.py version_1/test/hierarchicalstoragetest.py
--- version_0/test/hierarchicalstoragetest.py	2011-11-10 15:13:27.859677615 +0100
+++ version_1/test/hierarchicalstoragetest.py	2011-11-10 15:25:07.611677417 +0100
@@ -1,25 +1,27 @@
 ## begin license ##
-#
-#    Storage stores data in a reliable, extendable filebased storage
-#    with great performance.
-#    Copyright (C) 2006-2010 Seek You Too B.V. (CQ2) http://www.cq2.nl
-#
-#    This file is part of Storage.
-#
-#    Storage is free software; you can redistribute it and/or modify
-#    it under the terms of the GNU General Public License as published by
-#    the Free Software Foundation; either version 2 of the License, or
-#    (at your option) any later version.
-#
-#    Storage is distributed in the hope that it will be useful,
-#    but WITHOUT ANY WARRANTY; without even the implied warranty of
-#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-#    GNU General Public License for more details.
-#
-#    You should have received a copy of the GNU General Public License
-#    along with Storage; if not, write to the Free Software
-#    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-#
+# 
+# "Storage" stores data in a reliable, extendable filebased storage
+# with great performance. 
+# 
+# Copyright (C) 2006-2010 Seek You Too B.V. (CQ2) http://www.cq2.nl
+# Copyright (C) 2011 Seecr (Seek You Too B.V.) http://seecr.nl
+# 
+# This file is part of "Storage"
+# 
+# "Storage" is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of the License, or
+# (at your option) any later version.
+# 
+# "Storage" is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+# 
+# You should have received a copy of the GNU General Public License
+# along with "Storage"; if not, write to the Free Software
+# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
+# 
 ## end license ##
 
 from unittest import TestCase
@@ -98,6 +100,11 @@
             self.fail()
         except HierarchicalStorageError, e:
             self.assertEquals("Name 'one..two' not allowed: 'Empty name'", str(e))
+        try:
+            sink = f.put(('one', 'two'))
+            self.fail()
+        except HierarchicalStorageError, e:
+            self.assertEquals("Name ('one', 'two') not allowed: 'Empty name'", str(e))
 
     def testGetWithProblemSplit(self):
         s = Storage(self._tempdir)
@@ -162,7 +169,7 @@
             f.get(('sub','name'))
             self.fail()
         except HierarchicalStorageError, e:
-            self.assertEquals("Name '('sub', 'name')' does not exist.", str(e))
+            self.assertEquals("Name ('sub', 'name') does not exist.", str(e))
 
     def testDeleteNonExisting(self):
         s = Storage(self._tempdir)
